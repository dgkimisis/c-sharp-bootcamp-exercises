using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Exercise_04
{
    class Program
    {

        //We create a student class and inherit a comparable Interface
        public class Student : IComparable<Student>
        {
            public string name;
            public double mark;

            //Constructor that implements name and mark for every student
            public Student(string name, double mark)
            {
                this.name = name;
                this.mark = mark;
            }

            
            //
            public int CompareTo(Student s)
            {
                if (this.mark < s.mark)
                {
                    return -1;
                }
                else if (this.mark > s.mark)
                {
                    return 1;
                }
                else
                {
                    return 0;
                }
            }

        }

        static void Main(string[] args)
        {
            //List of Students
            List<Student> comparison = new List<Student>
            {
                new Student("Dimitris", 17),
                new Student("Kostas", 16),
                new Student("Mixalis", 15)
            };

            //Sort the comparison. 
            //It will be sorted according to our implementation of CompareTo.
            comparison.Sort();

            foreach (Student s in comparison)
            {
                Console.WriteLine(s.name + " got " + s.mark);
            }
            Console.ReadKey();
        }
    }
}
